# 2022 Daniel Stuart
# This is the version of YAML we are using with the Kubernetes API.
apiVersion: apps/v1
# The kind os the type of Kubernetes resource we are using.
# A deployment is when we run code on a server
kind: Deployment
# Metadata is information related to the object we created in Kubernetes.
metadata:
# The name here is the name of our deployment
  name: stedi-daniel-stuart
spec:
# Replicas refers to the number of pods we deploy.
  replicas: 1
# A selector is a route to my pod
  selector:
# Matchlabels are a label for my selector.
    matchLabels:
# App is a specific kind of label for my pod.
      app: stedi-daniel-stuart
# The template describes all the features of my pod
  template:
# The metadata provides labels for my template.
    metadata:
      labels:
        app: stedi-daniel-stuart
# The spec refers to the specification of my containers in my pod.
    spec:
# Containers can have one or more Docker containers in the pod.
      containers:
# The name of the container is specified below
        - name: stedi
# The image is a prebuilt file containing the operating system
          image: gcr.io/team-fire262/stedi-daniel-stuart
# The ports is a list of tcp ports the pod listens on
          ports:
#ContainerPort is a specific port the pod listens on
            - containerPort: 4567
# Resources are the compute resources used by the pod in the cloud
          resources:
# Limits represents the max amount of cpu and memory allowed for the pod
            limits:
# # CPU is the max amount of CPU that can be used by the pod.
                cpu: ".125"
# Memory is the max amount of memory that can be used by the pod
                memory: "500Mi"
# Requests is the minimum amount of compute resources used by the pod.
            requests:
# CPU is the minimum amount of CPU the pod needs to run
              cpu: ".125"
# Memory is the minimum amount of memory the pod needs to run
              memory: "250Mi"
# LivenessProbe is a configuration that checks the pod for health
          livenessProbe:
# HttpGet instructs kubernetes to do an HTTP request to check health
            httpGet:
# Path defines the url to use when doing the HTTP request
              path: /
# Port defines the port to use when dong the HTTP request
              port: 4567
# initialDelaySeconds tell Kubernetes to wait before doing a request
            initialDelaySeconds: 10
# periodSeconds tell Kubernetes how often to check health
            periodSeconds: 3
---
# apiVersion tells kubernetes which version of yaml to use.
apiVersion: v1
# Kind tells Kubernetes what kind of object to create.
kind: Service
# metadata contains attributes about the object.
metadata:
# Name is the name of the object we are creating
  name: stedi-daniel-stuart-loadbalancer
# spec is the specification for the object (or the loadbalancer)
spec:
# Selector tells the network layer how to find the right pod
  selector:
# App tells the selector which app to send the traffic to.
    app: stedi-daniel-stuart
# Type tells Kubernetes the type of service we want.
# A LoadBalancer distributes network packets to one or more pods
  type: LoadBalancer
# Ports are a list of ports the LoadBalancer listens on
  ports:
# Port is the port we want to listen on the network 
    - port: 80
# TargetPort is the port the pod listens on inside Kubernetes
      targetPort: 4567
